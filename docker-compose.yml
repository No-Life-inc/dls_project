
version: '3'
services:
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "9000:80"
    volumes:
      - nginx-data:/usr/share/nginx/html
    restart: always


  write-db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: write-db
    ports:
      - "1433:1433"
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./dls_graphql/initialization/sql/create-db.sql:/create-db.sql
      - ./dls_graphql/initialization/sql/entrypoint.sh:/entrypoint.sh
    command:
      - /bin/bash
      - /entrypoint.sh

  auth-db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: auth-db
    ports:
      - "1434:1433"
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${DB_PASSWORD}

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGOUSER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGOPW}
      MONGO_INITDB_DATABASE: ${MONGODB}
    volumes:
      - ./dls_graphql/initialization/init-db.js:/docker-entrypoint-initdb.d/init-db.js

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITUSER}
      RABBITMQ_DEFAULT_PASS: ${RABBITPW}
    ports:
      - "15672:15672"
      - "5672:5672"
    restart: always

  auth-backend:
    build:
      context: ./dls_auth_api/DLS_Backend
    depends_on:
      - auth-db
    container_name: auth-backend
    image: auth-backend
    ports:
      - "5012:5012"
    environment:
      - ASPNETCORE_URLS=http://+:5012
      - ASPNETCORE_ENVIRONMENT=Development
      - JWT_SECRET=${JWT_SECRET}
      - RABBITUSER=${RABBITUSER}
      - RABBITPW=${RABBITPW}
      - RABBITURL=${RABBITURL}
      - DB_SERVER=${AUTH_DB_INTERNAL_DOCKER_SERVER}
      - DB_BACKEND=${DB_BACKEND}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - FRONTENDURL=${FRONTENDURL}

  db-changes:
    build:
      context: ./dls_dbChanges
    depends_on:
      - mongo
      - rabbitmq
    container_name: db-changes
    image: db-changes
    restart: always
    ports:
      - "5000:5000"
    environment:
      - RABBITUSER=${RABBITUSER}
      - RABBITPW=${RABBITPW}
      - RABBITURL=${RABBITURL}
      - MONGOUSER=${MONGOUSER}
      - MONGOPW=${MONGOPW}
      - MONGOURL=${MONGOURL}
      - MONGODB=${MONGODB}
      
  cdn-changes: 
    build:
      context: ./dls_cdnChanges
    depends_on:
    - rabbitmq
    container_name: cdn-changes
    image: cdn-changes
    restart: always
    ports:
      - "5020:5020"
    environment:
      - RABBITUSER=${RABBITUSER}
      - RABBITPW=${RABBITPW}
      - RABBITURL=${RABBITURL}
    volumes:
      - nginx-data:/usr/src/app/images

  emailer:
    build:
      context: ./dls_emailer
    depends_on:
      - rabbitmq
    image: emailer
    container_name: emailer
    restart: always
    ports:
      - "5050:5050"
    environment:
      - RABBITUSER=${RABBITUSER}
      - RABBITPW=${RABBITPW}
      - RABBITURL=${RABBITURL}

  db-user-changes:
    build:
      context: ./dls_dbUserChanges
    depends_on:
      - write-db
      - rabbitmq
    image: db-user-changes
    container_name: db_user_changes
    ports:
      - "5001:5001"
    restart: always
    environment:
      - RABBITUSER=${RABBITUSER}
      - RABBITPW=${RABBITPW}
      - RABBITURL=${RABBITURL}
      - DB_SERVER=${WRITE_DB_INTERNAL_DOCKER_SERVER}
      - WRITE_DB=${WRITE_DB}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}

  dls-frontend:
    build:
      args:
        - REACT_APP_GRAPHQLURL=${GRAPHQLURL}
        - REACT_APP_WRITEAPIURL=${WRITEAPIURL}
        - REACT_APP_AUTHURL=${AUTHURL}
        - REACT_APP_CDNURL=${CDNURL}
      context: ./dls_frontend
    container_name: frontend
    image: frontend
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - REACT_APP_GRAPHQLURL=${GRAPHQLURL}
      - REACT_APP_WRITEAPIURL=${WRITEAPIURL}
      - REACT_APP_AUTHURL=${AUTHURL}
      - REACT_APP_CDNURL=${CDNURL}

  graphql-api:
    build:
      context: ./dls_graphql
    container_name: graphql
    image: graphql-api
    ports:
      - "4000:4000"
    environment:
      - PORT=${FRONTEND_BACKEND_PORT}
      - MONGOUSER=${MONGOUSER}
      - MONGOPW=${MONGOPW}
      - MONGOURL=${MONGOURL}
      - MONGODB=${MONGODB}
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=${CORS_ORIGIN}

  write-api:
    build: ./dls_write_api
    ports:
      - "3000:3000"
    container_name: write-api
    image: write-api
    depends_on:
      - rabbitmq
    environment:
      - PORT=${FRONTEND_WRITE_REST_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_SERVER=${WRITE_DB_INTERNAL_DOCKER_SERVER_NO_PORT}
      - WRITE_DB=${WRITE_DB}
      - RABBITUSER=${RABBITUSER}
      - RABBITPW=${RABBITPW}
      - RABBITURL=${RABBITURL}
      - WRITE_DB_SERVER_PORT=${WRITE_DB_SERVER_PORT}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - JWT_SECRET=${JWT_SECRET}

volumes:
  nginx-data:
