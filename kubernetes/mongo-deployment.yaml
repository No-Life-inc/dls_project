apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose-resolved.yaml -o ./kubernetes
    kompose.version: 1.33.0 (3ce457399)
  labels:
    io.kompose.service: mongo
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongo
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose-resolved.yaml -o ./kubernetes
        kompose.version: 1.33.0 (3ce457399)
      labels:
        io.kompose.network/dls-project-default: "true"
        io.kompose.service: mongo
    spec:
      containers:
        - env:
            - name: MONGO_INITDB_DATABASE
              value: frontend_backend_db
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: Passw0rd!
            - name: MONGO_INITDB_ROOT_USERNAME
              value: admin
          image: mongo:latest
          name: mongo
          ports:
            - containerPort: 27017
              hostPort: 27017
              protocol: TCP
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/init-db.js
              name: mongo-cm0
              subPath: init-db.js
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: init-db.js
                path: init-db.js
            name: mongo-cm0
          name: mongo-cm0
